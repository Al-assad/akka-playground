include "application"

akka {
  actor {
    provider = "cluster"
    serialization-bindings {
      "com.github.al.assad.akka.Cluster.CborSerializable" = jackson-cbor
      "com.github.al.assad.akka.Persistence.CborSerializable" = jackson-json
    }
  }
  remote {
    artery {
      canonical.hostname = "127.0.0.1"
      canonical.port = 0
    }
  }
  cluster {
    seed-nodes = [
      "akka://ClusterSystem@127.0.0.1:25251",
      "akka://ClusterSystem@127.0.0.1:25252"
    ]
    downing-provider-class = "akka.cluster.sbr.SplitBrainResolverProvider"
//    sharding {
//      passivation {
//        default-idle-strategy.idle-entity.timeout = 2 minutes
//      }
//    }
  }
  # enable jdbc-plugin as persistence provider
  persistence {
    # event sourcing storage config
    journal.plugin = "jdbc-journal"
    snapshot-store.plugin = "jdbc-snapshot-store"
    # durable state store config
    state.plugin = "jdbc-durable-state-store"
  }

}

jdbc-journal.slick = ${slick}

# the akka-persistence-snapshot-store in use
jdbc-snapshot-store.slick = ${slick}

# the akka-persistence-query provider in use
jdbc-read-journal.slick = ${slick}

# the akka-persistence-jdbc provider in use for durable state store
jdbc-durable-state-store.slick = ${slick}

# slick config
slick {
  profile = "slick.jdbc.PostgresProfile$"
  db {
    host = "hs.assad.site"
    url = "jdbc:postgresql://"${slick.db.host}":5432/akka_playground?reWriteBatchedInserts=true"
    user = "postgres"
    password = "postgres"
    driver = "org.postgresql.Driver"
    numThreads = 5
    maxConnections = 15
    minConnections = 1
  }
}
